class Solution {
    public static void recur(int a[][],int i,int j,int n,String s,ArrayList<String> res)
    {
        if(i==n-1 && j==n-1)
        {
            res.add(s);
            return;
        }
        if(i-1>=0 && a[i-1][j]==1)
        {
            a[i-1][j]=0;
            recur(a,i-1,j,n,s+"U",res);
            a[i-1][j]=1;
        }
        if(i+1<n && a[i+1][j]==1)
        {
            a[i+1][j]=0;
            recur(a,i+1,j,n,s+"D",res);
            a[i+1][j]=1;
        }
        if(j-1>=0 && a[i][j-1]==1)
        {
            a[i][j-1]=0;
            recur(a,i,j-1,n,s+"L",res);
            a[i][j-1]=1;
        }
        if(j+1<n && a[i][j+1]==1)
        {
            a[i][j+1]=0;
            recur(a,i,j+1,n,s+"R",res);
            a[i][j+1]=1;
        }
    }
    public static ArrayList<String> findPath(int[][] m, int n) {
        ArrayList<String> res=new ArrayList<>();
        if(m[0][0]==0)
        return res;
        m[0][0]=0;
        recur(m,0,0,n,"",res);
        Collections.sort(res);
        return res;
    }
}
